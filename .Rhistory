library(tidyverse)
raw_data <- read.csv("../data/output/summary/subdata_with_CCC.csv")
raw_data
library(tidyverse)
raw_data <- read.csv("../data/output/summary/subdata_with_CCC.csv")
raw_data
library(tidyverse)
sub1_data <-read_csv("/Users/dddd1007/project2git/cognitive_control_model/data/input/data_by_sub/sub_1_prepared_data.csv")
xia_model <- read_csv("/Users/dddd1007/project2git/cognitive_control_model/data/output/summary/subdata_with_CCC.csv")
wang_model <- read.csv("/Users/dddd1007/project2git/cognitive_control_model/ref_code/Lingwang_CCC/model_results/RLCC_model_results_SR_Q_D_alphaCCC_V_WOB_sub_1.csv")
xia_model
library(tidyverse)
sub1_data <-read_csv("/Users/dddd1007/project2git/cognitive_control_model/data/input/data_by_sub/sub_1_prepared_data.csv")
xia_model <- read_csv("/Users/dddd1007/project2git/cognitive_control_model/data/input/all_data_with_2a1d1CCC_2a1d1e.csv")
wang_model <- read.csv("/Users/dddd1007/project2git/cognitive_control_model/ref_code/Lingwang_CCC/model_results/RLCC_model_results_SR_Q_D_alphaCCC_V_WOB_sub_1.csv")
xia_model
# 相关分析
RT_data = sub1_data$RT
# 相关分析
RT_data = sub1_data$RT
xia_2a1d1e <- xia_model %>%
filter(Subject_num == 1) %>%
select(`_2a1d1e`)
xia_2a1d1CCC <- xia_model %>%
filter(Subject_num == 1) %>%
select(`_2a1d1CCC`)
wang_2a1d1CCC <- wang_model$P
length(xia_2a1d1CCC)
xia_2a1d1CCC
# 相关分析
RT_data = sub1_data$RT
xia_2a1d1e <- xia_model %>%
filter(Subject_num == 1) %>%
select(`_2a1d1e`) %>%
as.vector()
xia_2a1d1CCC <- xia_model %>%
filter(Subject_num == 1) %>%
select(`_2a1d1CCC`) %>%
as.vector()
wang_2a1d1CCC <- wang_model$P %>%
as.vector()
xia_2a1d1CCC
# 相关分析
RT_data = sub1_data$RT
xia_2a1d1e <- xia_model %>%
filter(Subject_num == 1) %>%
select(`_2a1d1e`) %>%
unlist()
xia_2a1d1CCC <- xia_model %>%
filter(Subject_num == 1) %>%
select(`_2a1d1CCC`) %>%
unlist()
wang_2a1d1CCC <- wang_model$P %>%
unlist()
xia_2a1d1CCC
# 相关分析
RT_data = sub1_data$RT
xia_2a1d1e <- xia_model %>%
filter(Subject_num == 1) %>%
select(`_2a1d1e`)
xia_2a1d1CCC <- xia_model %>%
filter(Subject_num == 1) %>%
select(`_2a1d1CCC`)
wang_2a1d1CCC <- wang_model$P
pretest_data <- cbind(RT_data, xia_2a1d1CCC, xia_2a1d1e, wang_2a1d1CCC)
lm(RT_data ~ xia_2a1d1CCC + xia_2a1d1e + wang_2a1d1CCC, data = pretest_data) %>%
summary()
xia_2a1d1CCC
xia_2a1d13
xia_2a1d1e
pretest_data
lm(RT_data ~ xia_2a1d1CCC + xia_2a1d1e + wang_2a1d1CCC, data = as_data_frame(pretest_data)) %>%
summary()
lm(RT_data ~ xia_2a1d1CCC + xia_2a1d1e + wang_2a1d1CCC, data = as_data_frame(pretest_data))
as_data_frame(pretest_data)
lm(RT_data ~ _2a1d1CCC + _2a1d1e + wang_2a1d1CCC, data = as_data_frame(pretest_data))
lm(RT_data ~ `_2a1d1CCC` + `_2a1d1e` + wang_2a1d1CCC, data = as_data_frame(pretest_data))
lm(RT_data ~ `_2a1d1CCC` + `_2a1d1e` + wang_2a1d1CCC, data = as_data_frame(pretest_data)) %>%
summary()
cor(pretest_data)
pretest_data <- cbind(RT_data, xia_2a1d1CCC, xia_2a1d1e, wang_2a1d1CCC, log(RT_data))
pretest_data
lm(log(RT_data) ~ `_2a1d1CCC` + `_2a1d1e` + wang_2a1d1CCC, data = as_data_frame(pretest_data)) %>%
summary()
cor(pretest_data)
install.packages(corrplot)
install.packages("corrplot")
cor(pretest_data)
library(corrplot)
corrplot(cor(pretest_data))
cor(pretest_data)
library(tidyverse)
sub1_data <-read_csv("/Users/dddd1007/project2git/cognitive_control_model/data/input/data_by_sub/sub_1_prepared_data.csv")
xia_model <- read_csv("/Users/dddd1007/project2git/cognitive_control_model/data/input/all_data_with_2a1d1CCC_2a1d1e.csv")
wang_model <- read.csv("/Users/dddd1007/project2git/cognitive_control_model/ref_code/Lingwang_CCC/model_results/RLCC_model_results_SR_Q_D_alphaCCC_V_WOB_sub_1.csv")
# 相关分析
RT_data = sub1_data$RT
xia_2a1d1e <- xia_model %>%
filter(Subject_num == 1) %>%
select(`_2a1d1e`)
xia_2a1d1CCC <- xia_model %>%
filter(Subject_num == 1) %>%
select(`_2a1d1CCC`)
wang_2a1d1CCC <- wang_model$P
pretest_data <- cbind(RT_data, xia_2a1d1CCC, xia_2a1d1e, wang_2a1d1CCC, log(RT_data))
lm(RT_data ~ `_2a1d1CCC` + `_2a1d1e` + wang_2a1d1CCC, data = as_data_frame(pretest_data)) %>%
summary()
lm(log(RT_data) ~ `_2a1d1CCC` + `_2a1d1e` + wang_2a1d1CCC, data = as_data_frame(pretest_data)) %>%
summary()
cor(pretest_data)
cor.test(pretest_data$RT, pretest_data$wang_2a1d1CCC)
foo <- lm(RT_data ~ `_2a1d1CCC` + `_2a1d1e` + wang_2a1d1CCC, data = as_data_frame(pretest_data))
str(foo)
str(summary(foo))
str(coef(foo))
coef(foo)
coefficients(foo)
str(summary(foo))
foo <- lm(RT_data ~ `_2a1d1CCC` + `_2a1d1e` + wang_2a1d1CCC, data = as_data_frame(pretest_data))
bar <- summary(foo)
bar$coefficients
temp <- bar$coefficients
str(temp)
temp[,4]
paste0("XIA",1)
lm_pvalue <- function(sub_num){
sub_data_path <- paste0("/Users/dddd1007/project2git/cognitive_control_model/data/input/data_by_sub/sub_", sub_num, "_prepared_data.csv")
wang_model_path <- paste0("/Users/dddd1007/project2git/cognitive_control_model/ref_code/Lingwang_CCC/model_results/RLCC_model_results_SR_Q_D_alphaCCC_V_WOB_sub_",
sub_num, ".csv")
sub_data <-read_csv(sub_data_path)
xia_model <- read_csv("/Users/dddd1007/project2git/cognitive_control_model/data/input/all_data_with_2a1d1CCC_2a1d1e.csv") %>%
filter(Subject_num == sub_num)
wang_model <- read.csv(wang_model_path)
RT_data = sub_data$RT
xia_2a1d1e <- xia_model %>%
select(`_2a1d1e`)
xia_2a1d1CCC <- xia_model %>%
select(`_2a1d1CCC`)
wang_2a1d1CCC <- wang_model$P
pretest_data <- cbind(RT_data, xia_2a1d1CCC, xia_2a1d1e, wang_2a1d1CCC, log(RT_data))
parameters <- lm(RT_data ~ `_2a1d1CCC` + `_2a1d1e` + wang_2a1d1CCC, data = as_data_frame(pretest_data)) %>%
summary()
return(parameters[,4])
}
lm_pvalue(1)
lm_pvalue <- function(sub_num){
sub_data_path <- paste0("/Users/dddd1007/project2git/cognitive_control_model/data/input/data_by_sub/sub_", sub_num, "_prepared_data.csv")
wang_model_path <- paste0("/Users/dddd1007/project2git/cognitive_control_model/ref_code/Lingwang_CCC/model_results/RLCC_model_results_SR_Q_D_alphaCCC_V_WOB_sub_",
sub_num, ".csv")
sub_data <-read_csv(sub_data_path)
xia_model <- read_csv("/Users/dddd1007/project2git/cognitive_control_model/data/input/all_data_with_2a1d1CCC_2a1d1e.csv") %>%
filter(Subject_num == sub_num)
wang_model <- read.csv(wang_model_path)
RT_data = sub_data$RT
xia_2a1d1e <- xia_model %>%
select(`_2a1d1e`)
xia_2a1d1CCC <- xia_model %>%
select(`_2a1d1CCC`)
wang_2a1d1CCC <- wang_model$P
pretest_data <- cbind(RT_data, xia_2a1d1CCC, xia_2a1d1e, wang_2a1d1CCC, log(RT_data))
parameters <- lm(RT_data ~ `_2a1d1CCC` + `_2a1d1e` + wang_2a1d1CCC, data = as_data_frame(pretest_data)) %>%
summary()
return(parameters$coefficients[,4])
}
lm_pvalue(1)
lm_pvalue <- function(sub_num){
sub_data_path <- paste0("/Users/dddd1007/project2git/cognitive_control_model/data/input/data_by_sub/sub_", sub_num, "_prepared_data.csv")
wang_model_path <- paste0("/Users/dddd1007/project2git/cognitive_control_model/ref_code/Lingwang_CCC/model_results/RLCC_model_results_SR_Q_D_alphaCCC_V_WOB_sub_",
sub_num, ".csv")
sub_data <-read_csv(sub_data_path, col_types = cols())
xia_model <- read_csv("/Users/dddd1007/project2git/cognitive_control_model/data/input/all_data_with_2a1d1CCC_2a1d1e.csv", col_types = cols()) %>%
filter(Subject_num == sub_num)
wang_model <- read.csv(wang_model_path)
RT_data = sub_data$RT
xia_2a1d1e <- xia_model %>%
select(`_2a1d1e`)
xia_2a1d1CCC <- xia_model %>%
select(`_2a1d1CCC`)
wang_2a1d1CCC <- wang_model$P
pretest_data <- cbind(RT_data, xia_2a1d1CCC, xia_2a1d1e, wang_2a1d1CCC, log(RT_data))
parameters <- lm(RT_data ~ `_2a1d1CCC` + `_2a1d1e` + wang_2a1d1CCC, data = as_data_frame(pretest_data)) %>%
summary()
return(parameters$coefficients[,4])
}
lm_pvalue(1)
foo <- 1:10
map(foo, lm_pvalue)
foo <- 1:10
foo %>%
map(lm_pvalue)
result_list <- list()
for (i in 1:36) {
print(i)
list[[i]] <- lm_pvalue(i)
}
result_list <- list()
for (i in 1:36) {
print(i)
result_list[[i]] <- lm_pvalue(i)
}
result_list <- list()
for (i in 1:36) {
print(i)
if(i == 7){next}
result_list[[i]] <- lm_pvalue(i)
}
result_list <- list()
for (i in 1:36) {
print(i)
if (i == 7) {
next
}
result_list[[i]] <- lm_pvalue(i)
}
result_list <- list()
for (i in 1:36) {
print(i)
if (i == 6) {
next
}
result_list[[i]] <- lm_pvalue(i)
}
lm_result_table <- do.call(rbind, result_list)
lm_result_table
lm_pvalue <- function(sub_num){
sub_data_path <- paste0("/Users/dddd1007/project2git/cognitive_control_model/data/input/data_by_sub/sub_", sub_num, "_prepared_data.csv")
wang_model_path <- paste0("/Users/dddd1007/project2git/cognitive_control_model/ref_code/Lingwang_CCC/model_results/RLCC_model_results_SR_Q_D_alphaCCC_V_WOB_sub_",
sub_num, ".csv")
sub_data <-read_csv(sub_data_path, col_types = cols())
xia_model <- read_csv("/Users/dddd1007/project2git/cognitive_control_model/data/input/all_data_with_2a1d1CCC_2a1d1e.csv", col_types = cols()) %>%
filter(Subject_num == sub_num)
wang_model <- read.csv(wang_model_path)
RT_data = sub_data$RT
xia_2a1d1e <- xia_model %>%
select(`_2a1d1e`)
xia_2a1d1CCC <- xia_model %>%
select(`_2a1d1CCC`)
wang_2a1d1CCC <- wang_model$P
pretest_data <- cbind(RT_data, xia_2a1d1CCC, xia_2a1d1e, wang_2a1d1CCC, log(RT_data))
parameters <- lm(RT_data ~ `_2a1d1e` + `_2a1d1CCC` + wang_2a1d1CCC, data = as_data_frame(pretest_data)) %>%
summary()
return(parameters$coefficients[,4])
}
result_list <- list()
for (i in 1:36) {
print(i)
if (i == 6) {
next
}
result_list[[i]] <- lm_pvalue(i)
}
lm_result_table <- do.call(rbind, result_list)
lm_result_table
cor(pretest_data$RT_data, pretest_data$wang_2a1d1CCC)
a <- c(1,2,3)
names(a) <- c("a", "b", "c")
a
cor_each <- function(sub_num){
sub_data_path <- paste0("/Users/dddd1007/project2git/cognitive_control_model/data/input/data_by_sub/sub_", sub_num, "_prepared_data.csv")
wang_model_path <- paste0("/Users/dddd1007/project2git/cognitive_control_model/ref_code/Lingwang_CCC/model_results/RLCC_model_results_SR_Q_D_alphaCCC_V_WOB_sub_",
sub_num, ".csv")
sub_data <-read_csv(sub_data_path, col_types = cols())
xia_model <- read_csv("/Users/dddd1007/project2git/cognitive_control_model/data/input/all_data_with_2a1d1CCC_2a1d1e.csv", col_types = cols()) %>%
filter(Subject_num == sub_num)
wang_model <- read.csv(wang_model_path)
RT_data = sub_data$RT
xia_2a1d1e <- xia_model %>%
select(`_2a1d1e`)
xia_2a1d1CCC <- xia_model %>%
select(`_2a1d1CCC`)
wang_2a1d1CCC <- wang_model$P
result <- c(cor(RT_data, xia_2a1d1CCC), cor(RT_data, xia_2a1d1e), cor(RT_data, wang_2a1d1CCC))
names(result) <- c("xia_2a1d1CCC", "xia_2a1d1e", "wang_2a1d1CCC")
return(result)
}
cor_each(1)
result_list <- list()
for (i in 1:36) {
print(i)
if (i == 6) {
next
}
result_list[[i]] <- cor_each(i)
}
cor_result_table = do.call(rbind, result_list)
cor_result_table
